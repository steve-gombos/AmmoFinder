name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
    paths:
      - "**"
      - "!**.md"
  pull_request:
    paths:
      - "**"
      - "!**.md"

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

jobs:     
  build:
    name: Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # see also https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json
        dotnet: ["3.1"]
    steps:
    - uses: actions/checkout@v2
    - name: Install ${{ matrix.dotnet }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}
    - name: Restore
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal --collect:"XPlat Code Coverage"
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: /**/*coverage*.xml
        flags: ${{ runner.os }},netcore${{ matrix.dotnet }}

  sonarscan:
    name: SonarScan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: sonarscan-dotnet
      uses: highbyte/sonarscan-dotnet@1.0
      with:
        sonarProjectKey: steve-gombos_AmmoFinder
        sonarProjectName: AmmoFinder
        sonarOrganization: steve-gombos
        dotnetTestArguments: --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
