// <auto-generated />
using System;
using AmmoFinder.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmmoFinder.Data.Migrations
{
    [DbContext(typeof(ProductsContext))]
    [Migration("20201021072443_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AmmoFinder.Data.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caliber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Casing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Inventory")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("RetailerId")
                        .HasColumnType("bigint");

                    b.Property<string>("RetailerProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoundContainer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoundCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoundType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RetailerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AmmoFinder.Data.Models.Retailer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Retailers");
                });

            modelBuilder.Entity("AmmoFinder.Data.Models.Product", b =>
                {
                    b.HasOne("AmmoFinder.Data.Models.Retailer", "Retailer")
                        .WithMany()
                        .HasForeignKey("RetailerId");
                });
#pragma warning restore 612, 618
        }
    }
}
